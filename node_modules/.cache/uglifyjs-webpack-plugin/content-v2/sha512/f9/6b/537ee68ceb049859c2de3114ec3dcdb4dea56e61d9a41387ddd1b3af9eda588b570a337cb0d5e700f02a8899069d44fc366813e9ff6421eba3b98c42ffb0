{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{163:function(t,s,a){\"use strict\";a.r(s);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"json-schema-traverse\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#json-schema-traverse\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" json-schema-traverse\")]),a(\"p\",[t._v(\"Traverse JSON Schema passing each schema object to callback\")]),a(\"p\",[a(\"a\",{attrs:{href:\"https://travis-ci.org/epoberezkin/json-schema-traverse\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a(\"img\",{attrs:{src:\"https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master\",alt:\"Build Status\"}})]),a(\"a\",{attrs:{href:\"https://www.npmjs.com/package/json-schema-traverse\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a(\"img\",{attrs:{src:\"https://badge.fury.io/js/json-schema-traverse.svg\",alt:\"npm version\"}})]),a(\"a\",{attrs:{href:\"https://coveralls.io/github/epoberezkin/json-schema-traverse?branch=master\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a(\"img\",{attrs:{src:\"https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master\",alt:\"Coverage Status\"}})])]),a(\"h2\",{attrs:{id:\"install\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#install\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Install\")]),a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"npm install json-schema-traverse\\n\")])]),a(\"h2\",{attrs:{id:\"usage\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usage\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Usage\")]),a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" traverse \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'json-schema-traverse'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" schema \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  properties\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    foo\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"type\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'string'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    bar\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"type\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'integer'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"traverse\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"schema\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" cb\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// cb is called 3 times with:\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 1. root schema\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 2. {type: 'string'}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 3. {type: 'integer'}\")]),t._v(\"\\n\")])]),a(\"p\",[t._v(\"Callback function is called for each schema object (not including draft-06 boolean schemas), including the root schema. Schema references ($ref) are not resolved, they are passed as is.\")]),a(\"p\",[t._v(\"Callback is passed these parameters:\")]),a(\"ul\",[a(\"li\",[a(\"em\",[t._v(\"schema\")]),t._v(\": the current schema object\")]),a(\"li\",[a(\"em\",[t._v(\"JSON pointer\")]),t._v(\": from the root schema to the current schema object\")]),a(\"li\",[a(\"em\",[t._v(\"root schema\")]),t._v(\": the schema passed to \"),a(\"code\",[t._v(\"traverse\")]),t._v(\" object\")]),a(\"li\",[a(\"em\",[t._v(\"parent JSON pointer\")]),t._v(\": from the root schema to the parent schema object (see below)\")]),a(\"li\",[a(\"em\",[t._v(\"parent keyword\")]),t._v(\": the keyword inside which this schema appears (e.g. \"),a(\"code\",[t._v(\"properties\")]),t._v(\", \"),a(\"code\",[t._v(\"anyOf\")]),t._v(\", etc.)\")]),a(\"li\",[a(\"em\",[t._v(\"parent schema\")]),t._v(\": not necessarily parent object/array; in the example above the parent schema for \"),a(\"code\",[t._v(\"{type: 'string'}\")]),t._v(\" is the root schema\")]),a(\"li\",[a(\"em\",[t._v(\"index/property\")]),t._v(\": index or property name in the array/object containing multiple schemas; in the example above for \"),a(\"code\",[t._v(\"{type: 'string'}\")]),t._v(\" the property name is \"),a(\"code\",[t._v(\"'foo'\")])])]),a(\"h2\",{attrs:{id:\"traverse-objects-in-all-unknown-keywords\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#traverse-objects-in-all-unknown-keywords\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Traverse objects in all unknown keywords\")]),a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" traverse \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'json-schema-traverse'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" schema \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  mySchema\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    minimum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    maximum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"traverse\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"schema\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"allKeys\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token boolean\"}},[t._v(\"true\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" cb\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// cb is called 2 times with:\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 1. root schema\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 2. mySchema\")]),t._v(\"\\n\")])]),a(\"p\",[t._v(\"Without option \"),a(\"code\",[t._v(\"allKeys: true\")]),t._v(\" callback will be called only with root schema.\")]),a(\"h2\",{attrs:{id:\"license\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#license\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" License\")]),a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/epoberezkin/json-schema-traverse/blob/master/LICENSE\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MIT\")])])])}],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}