{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{257:function(a,s,e){\"use strict\";e.r(s);var t=e(0),n=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,s=a.$createElement,e=a._self._c||s;return e(\"div\",{staticClass:\"content\"},[e(\"h1\",{attrs:{id:\"addressparser\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#addressparser\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" addressparser\")]),e(\"p\",[a._v(\"Parse e-mail address fields. Input can be a single address (\"),e(\"code\",[a._v('\"andris@kreata.ee\"')]),a._v(\"), a formatted address (\"),e(\"code\",[a._v('\"Andris Reinman <andris@kreata.ee>\"')]),a._v(\"), comma separated list of addresses (\"),e(\"code\",[a._v('\"andris@kreata.ee, andris.reinman@kreata.ee\"')]),a._v(\"), an address group (\"),e(\"code\",[a._v('\"disclosed-recipients:andris@kreata.ee;\"')]),a._v(\") or a mix of all the formats.\")]),e(\"p\",[a._v(\"In addition to comma the semicolon is treated as the list delimiter as well (except when used in the group syntax), so a value \"),e(\"code\",[a._v('\"andris@kreata.ee; andris.reinman@kreata.ee\"')]),a._v(\" is identical to \"),e(\"code\",[a._v('\"andris@kreata.ee, andris.reinman@kreata.ee\"')]),a._v(\".\")]),e(\"h2\",{attrs:{id:\"installation\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#installation\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" Installation\")]),e(\"p\",[a._v(\"Install with npm\")]),e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"npm install addressparser\\n\")])]),e(\"h2\",{attrs:{id:\"usage\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usage\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" Usage\")]),e(\"p\",[a._v(\"Include the module\")]),e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token keyword\"}},[a._v(\"var\")]),a._v(\" addressparser \"),e(\"span\",{attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),e(\"span\",{attrs:{class:\"token function\"}},[a._v(\"require\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),e(\"span\",{attrs:{class:\"token string\"}},[a._v(\"'addressparser'\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\")\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\")])]),e(\"p\",[a._v(\"Parse some address strings with \"),e(\"code\",[a._v(\"addressparser(field)\")])]),e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token keyword\"}},[a._v(\"var\")]),a._v(\" addresses \"),e(\"span\",{attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),e(\"span\",{attrs:{class:\"token function\"}},[a._v(\"addressparser\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),e(\"span\",{attrs:{class:\"token string\"}},[a._v(\"'andris <andris@tr.ee>'\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\")\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\nconsole\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\".\")]),e(\"span\",{attrs:{class:\"token function\"}},[a._v(\"log\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"addresses\"),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\")\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\" \"),e(\"span\",{attrs:{class:\"token comment\"}},[a._v('// [{name: \"andris\", address:\"andris@tr.ee\"}]')]),a._v(\"\\n\")])]),e(\"p\",[a._v(\"And when using groups\")]),e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{attrs:{class:\"token function\"}},[a._v(\"addressparser\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),e(\"span\",{attrs:{class:\"token string\"}},[a._v(\"'Composers:\\\"Bach, Sebastian\\\" <sebu@example.com>, mozart@example.com (Mozzie);'\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\")\")]),e(\"span\",{attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\")])]),e(\"p\",[a._v(\"the result would be\")]),e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v('[\\n    {\\n        name: \"Composers\",\\n        group: [\\n            {\\n                address: \"sebu@example.com\",\\n                name: \"Bach, Sebastian\"\\n            },\\n            {\\n                address: \"mozart@example.com\",\\n                name: \"Mozzie\"\\n            }\\n        ]\\n    }\\n]\\n')])]),e(\"blockquote\",[e(\"p\",[a._v(\"Be prepared though that groups might be nested.\")])]),e(\"h2\",{attrs:{id:\"notes\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#notes\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" Notes\")]),e(\"p\",[a._v(\"This module does not decode any mime-word or punycode encoded strings, it is only a basic parser for parsing the base data, you need to decode the encoded parts later by yourself\")]),e(\"h2\",{attrs:{id:\"license\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#license\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" License\")]),e(\"p\",[e(\"strong\",[a._v(\"MIT\")])])])}],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}