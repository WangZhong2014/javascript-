{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{218:function(e,a,r){\"use strict\";r.r(a);var n=r(0),t=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,r=e._self._c||a;return r(\"div\",{staticClass:\"content\"},[r(\"p\",[e._v(\"node-asn1 is a library for encoding and decoding ASN.1 datatypes in pure JS.\\nCurrently BER encoding is supported; at some point I'll likely have to do DER.\")]),r(\"h2\",{attrs:{id:\"usage\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usage\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Usage\")]),r(\"p\",[e._v(\"Mostly, if you're \"),r(\"em\",[e._v(\"actually\")]),e._v(\" needing to read and write ASN.1, you probably don't\\nneed this readme to explain what and why.  If you have no idea what ASN.1 is,\\nsee this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\")]),r(\"p\",[e._v(\"The source is pretty much self-explanatory, and has read/write methods for the\\ncommon types out there.\")]),r(\"h3\",{attrs:{id:\"decoding\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#decoding\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Decoding\")]),r(\"p\",[e._v(\"The following reads an ASN.1 sequence with a boolean.\")]),r(\"pre\",[r(\"code\",[e._v(\"var Ber = require('asn1').Ber;\\n\\nvar reader = new Ber.Reader(new Buffer([0x30, 0x03, 0x01, 0x01, 0xff]));\\n\\nreader.readSequence();\\nconsole.log('Sequence len: ' + reader.length);\\nif (reader.peek() === Ber.Boolean)\\n  console.log(reader.readBoolean());\\n\")])]),r(\"h3\",{attrs:{id:\"encoding\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#encoding\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Encoding\")]),r(\"p\",[e._v(\"The following generates the same payload as above.\")]),r(\"pre\",[r(\"code\",[e._v(\"var Ber = require('asn1').Ber;\\n\\nvar writer = new Ber.Writer();\\n\\nwriter.startSequence();\\nwriter.writeBoolean(true);\\nwriter.endSequence();\\n\\nconsole.log(writer.buffer);\\n\")])]),r(\"h2\",{attrs:{id:\"installation\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#installation\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Installation\")]),r(\"pre\",[r(\"code\",[e._v(\"npm install asn1\\n\")])]),r(\"h2\",{attrs:{id:\"license\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#license\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" License\")]),r(\"p\",[e._v(\"MIT.\")]),r(\"h2\",{attrs:{id:\"bugs\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bugs\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Bugs\")]),r(\"p\",[e._v(\"See \"),r(\"a\",{attrs:{href:\"https://github.com/mcavage/node-asn1/issues\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://github.com/mcavage/node-asn1/issues\")]),e._v(\".\")])])}],!1,null,null,null);a.default=t.exports}}]);","extractedComments":[]}