{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{199:function(t,n,s){\"use strict\";s.r(n);var a=s(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s(\"div\",{staticClass:\"content\"},[s(\"h1\",{attrs:{id:\"socks\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#socks\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" socks\")]),s(\"p\",[t._v(\"socks is a full client implementation of the SOCKS 4, 4a, and 5 protocols in an easy to use node.js module.\")]),s(\"h3\",{attrs:{id:\"notice\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#notice\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Notice\")]),s(\"p\",[t._v(\"As of February 26th, 2015, socks is the new home of the socks-client package.\")]),s(\"h3\",{attrs:{id:\"why-socks\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#why-socks\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Why socks?\")]),s(\"p\",[t._v(\"There is not any other SOCKS proxy client library on npm that supports all three variants of the SOCKS protocol. Nor are there any that support the BIND and associate features that some versions of the SOCKS protocol supports.\")]),s(\"p\",[t._v(\"Key Features:\")]),s(\"ul\",[s(\"li\",[t._v(\"Supports SOCKS 4, 4a, and 5 protocols\")]),s(\"li\",[t._v(\"Supports the connect method (simple tcp connections of SOCKS)  (Client -> SOCKS Server -> Target Server)\")]),s(\"li\",[t._v(\"Supports the BIND method (4, 4a, 5)\")]),s(\"li\",[t._v(\"Supports the associate (UDP forwarding) method (5)\")]),s(\"li\",[t._v(\"Simple and easy to use (one function call to make any type of SOCKS connection)\")])]),s(\"h2\",{attrs:{id:\"installing\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#installing\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Installing:\")]),s(\"p\",[s(\"code\",[t._v(\"npm install socks\")])]),s(\"h3\",{attrs:{id:\"getting-started-example\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#getting-started-example\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Getting Started Example\")]),s(\"p\",[t._v(\"For this example, say you wanted to grab the html of google's home page.\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" Socks \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'socks'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" options \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    proxy\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        ipaddress\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"202.101.228.108\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Random public proxy\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        type\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// type is REQUIRED. Valid types: [4, 5]  (note 4 also works for 4a)\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    target\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"google.com\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// can be an ip address or domain (4a and 5 only)\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"80\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    command\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'connect'\")]),t._v(\"  \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// This defaults to connect, so it's optional if you're not using BIND or Associate.\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nSocks\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"createConnection\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"options\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Connection has been established, we can start sending data now:\")]),t._v(\"\\n        socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"write\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"GET / HTTP/1.1\\\\nHost: google.com\\\\n\\\\n\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"on\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'data'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// PLEASE NOTE: sockets need to be resumed before any data will come in or out as they are paused right before this callback is fired.\")]),t._v(\"\\n        socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"resume\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 569\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// <Buffer 48 54 54 50 2f 31 2e 31 20 33 30 31 20 4d 6f 76 65 64 20 50 65...\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),s(\"h3\",{attrs:{id:\"bind-example\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bind-example\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" BIND Example:\")]),s(\"p\",[t._v(\"When sending the BIND command to a SOCKS proxy server, this will cause the proxy server to open up a new tcp port. Once this port is open, you, another client, application, etc, can then connect to the SOCKS proxy on that tcp port and communications will be forwarded to each connection through the proxy itself.\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" options \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    proxy\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        ipaddress\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"202.101.228.108\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        type\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        command\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"bind\"')]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Since we are using bind, we must specify it here.\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    target\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"1.2.3.4\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using bind, it's best to give an estimation of the ip that will be connecting to the newly opened tcp port on the proxy server.\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nSocks\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"createConnection\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"options\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// BIND request has completed.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// info object contains the remote ip and newly opened tcp port to connect to.\")]),t._v(\"\\n        console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// { port: 1494, host: '202.101.228.108' }\")]),t._v(\"\\n\\n        socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"on\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'data'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"data\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Remember to resume the socket stream.\")]),t._v(\"\\n        socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"resume\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\")])]),s(\"p\",[t._v(\"At this point, your original connection to the proxy server remains open, and no data will be received until a tcp connection is made to the given endpoint in the info object.\")]),s(\"p\",[t._v(\"For an example, I am going to connect to the endpoint with telnet:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Joshs-MacBook-Pro:~ Josh$ telnet 202.101.228.108 1494\\n Trying 202.101.228.108...\\n Connected to 202.101.228.108.\\n Escape character is '^]'.\\n hello\\n aaaaaaaaa\\n\")])]),s(\"p\",[t._v(\"Note that this connection to the newly bound port does not need to go through the SOCKS handshake.\")]),s(\"p\",[t._v(\"Back at our original connection we see that we have received some new data:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"8\\n<Buffer 00 5a ca 61 43 a8 09 01>  // This first piece of information can be ignored.\\n\\n7\\n<Buffer 68 65 6c 6c 6f 0d 0a> // Hello <\\\\r\\\\n (enter key)>\\n\\n11\\n<Buffer 61 61 61 61 61 61 61 61 61 0d 0a> // aaaaaaaaa <\\\\r\\\\n (enter key)>\\n\")])]),s(\"p\",[t._v(\"As you can see the data entered in the telnet terminal is routed through the SOCKS proxy and back to the original connection that was made to the proxy.\")]),s(\"p\",[s(\"strong\",[t._v(\"Note\")]),t._v(\" Please pay close attention to the first piece of data that was received.\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"<Buffer 00 5a ca 61 43 a8 09 01>\\n\\n        [005a] [PORT:2} [IP:4]\\n\")])]),s(\"p\",[t._v(\"This piece of data is technically part of the SOCKS BIND specifications, but because of my design decisions that were made in an effort to keep this library simple to use, you will need to make sure to ignore and/or deal with this initial packet that is received when a connection is made to the newly opened port.\")]),s(\"h3\",{attrs:{id:\"associate-example\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#associate-example\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Associate Example:\")]),s(\"p\",[t._v(\"The associate command sets up a UDP relay for the remote SOCKS proxy server to relay UDP packets to the remote host of your choice.\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" options \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    proxy\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        ipaddress\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"202.101.228.108\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        type\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        command\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"associate\"')]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Since we are using associate, we must specify it here.\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    target\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using associate, either set the ip and port to 0.0.0.0:0 or the expected source of incoming udp packets.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Note: Some SOCKS servers MAY block associate requests with 0.0.0.0:0 endpoints.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Note: ipv4, ipv6, and hostnames are supported here.\")]),t._v(\"\\n        host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"0.0.0.0\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\\nSocks\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"createConnection\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"options\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Associate request has completed.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// info object contains the remote ip and udp port to send UDP packets to.\")]),t._v(\"\\n        console\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// { port: 42803, host: '202.101.228.108' }\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" udp \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"dgram\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"Socket\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'udp4'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v('// In this example we are going to send \"Hello\" to 1.2.3.4:2323 through the SOCKS proxy.')]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" pack \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Socks\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"createUDPFrame\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"1.2.3.4\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2323\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Buffer\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"hello\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Send Packet to Proxy UDP endpoint given in the info object.\")]),t._v(\"\\n        udp\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"send\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"pack\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" pack\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\")])]),s(\"p\",[t._v(\"Now assuming that the associate request went through correctly. Anything that is typed in the stdin will first be sent to the SOCKS proxy on the endpoint that was provided in the info object. Once the SOCKS proxy receives it, it will then forward on the actual UDP packet to the host you you wanted.\")]),s(\"p\",[t._v(\"1.2.3.4:2323 should now receive our relayed UDP packet from 202.101.228.108 (SOCKS proxy)\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"// <Buffer 68 65 6c 6c 6f>\\n\")])]),s(\"h2\",{attrs:{id:\"using-socks-as-an-http-agent\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#using-socks-as-an-http-agent\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Using socks as an HTTP Agent\")]),s(\"p\",[t._v(\"You can use socks as a http agent which will relay all your http\\nconnections through the socks server.\")]),s(\"p\",[t._v(\"The object that \"),s(\"code\",[t._v(\"Socks.Agent\")]),t._v(\" accepts is the same as \"),s(\"code\",[t._v(\"Socks.createConnection\")]),t._v(\", you don't need to set a target since you have to define it in \"),s(\"code\",[t._v(\"http.request\")]),t._v(\" or \"),s(\"code\",[t._v(\"http.get\")]),t._v(\" methods.\")]),s(\"p\",[t._v(\"The second argument is a boolean which indicates whether the remote endpoint requires TLS.\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" socksAgent \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Socks\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"Agent\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    proxy\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        ipaddress\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"202.101.228.108\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        type\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// we are connecting to a HTTPS server, false for HTTP server\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// rejectUnauthorized option passed to tls.connect(). Only when secure is set to true\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nhttp\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"get\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" hostname\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'google.com'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'443'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" agent\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" socksAgent\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"res\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Connection header by default is keep-alive, we have to manually end the socket\")]),t._v(\"\\n    socksAgent\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"encryptedSocket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"end\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),s(\"h1\",{attrs:{id:\"api-reference\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#api-reference\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Api Reference:\")]),s(\"p\",[t._v(\"There are only three exported functions that you will ever need to use.\")]),s(\"h3\",{attrs:{id:\"socks-createconnection-options-callback-err-socket-info\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#socks-createconnection-options-callback-err-socket-info\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Socks.createConnection( options, callback(err, socket, info)  )\")]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Object\")]),s(\"strong\",[t._v(\"Object containing options to use when creating this connection\")])])]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"function\")]),s(\"strong\",[t._v(\"Callback that is called when connection completes or errors\")])])]),s(\"p\",[t._v(\"Options:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" options \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Information about proxy server\")]),t._v(\"\\n    proxy\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// IP Address of Proxy (Required)\")]),t._v(\"\\n        ipaddress\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"1.2.3.4\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// TCP Port of Proxy (Required)\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Proxy Type [4, 5] (Required)\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Note: 4 works for both 4 and 4a.\")]),t._v(\"\\n        type\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// SOCKS Connection Type (Optional)\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// - defaults to 'connect'\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 'connect'    - establishes a regular SOCKS connection to the target host.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 'bind'       - establishes an open tcp port on the SOCKS for another client to connect to.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 'associate'  - establishes a udp association relay on the SOCKS server.\")]),t._v(\"\\n        command\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"connect\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// SOCKS 4 Specific:\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// UserId used when making a SOCKS 4/4a request. (Optional)\")]),t._v(\"\\n        userid\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"someuserid\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// SOCKS 5 Specific:\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Authentication used for SOCKS 5 (when it's required) (Optional)\")]),t._v(\"\\n        authentication\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            username\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"Josh\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            password\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"somepassword\"')]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n    \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Information about target host and/or expected client of a bind association. (Required)\")]),t._v(\"\\n    target\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using 'connect':    IP Address or hostname (4a and 5 only) of a target to connect to.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using 'bind':       IP Address of the expected client that will connect to the newly open tcp port.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using 'associate':  IP Address and Port of the expected client that will send UDP packets to this UDP association relay.\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Note:\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using SOCKS 4, only an ipv4 address can be used.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using SOCKS 4a, an ipv4 address OR a hostname can be used.\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// When using SOCKS 5, ipv4, ipv6, or a hostname can be used.\")]),t._v(\"\\n        host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"1.2.3.4\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// TCP port of target to connect to.\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1080\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n    \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Amount of time to wait for a connection to be established. (Optional)\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// - defaults to 10000ms (10 seconds)\")]),t._v(\"\\n    timeout\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10000\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),s(\"p\",[t._v(\"Callback:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// err:  If an error occurs, err will be an Error object, otherwise null.\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// socket: Socket with established connection to your target host.\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// info: If using BIND or associate, this will be the remote endpoint to use.\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"err\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" socket\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" info\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Hopefully no errors :-)\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),s(\"h3\",{attrs:{id:\"socks-createudpframe-target-data-frame\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#socks-createudpframe-target-data-frame\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Socks.createUDPFrame( target, data, [frame] )\")]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Object\")]),s(\"strong\",[t._v(\"Target host object containing destination for UDP packet\")])])]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Buffer\")]),s(\"strong\",[t._v(\"Data Buffer to send in the UDP packet\")])])]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Number\")]),s(\"strong\",[t._v(\"Frame number in UDP packet. (defaults to 0)\")])])]),s(\"p\",[t._v(\"Creates a UDP packet frame for using with UDP association relays.\")]),s(\"p\",[t._v(\"returns \"),s(\"code\",[t._v(\"Buffer\")]),t._v(\" The completed UDP packet container to be sent to the proxy for forwarding.\")]),s(\"p\",[t._v(\"target:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Target host information for where the UDP packet should be sent.\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" target \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// ipv4, ipv6, or hostname for where to have the proxy send the UDP packet.\")]),t._v(\"\\n        host\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"1.2.3.4\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// udpport for where to send the UDP packet.\")]),t._v(\"\\n        port\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2323\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\")])]),s(\"h3\",{attrs:{id:\"socks-agent-options-tls\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#socks-agent-options-tls\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Socks.Agent( options, tls)  )\")]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Object\")]),s(\"strong\",[t._v(\"Object containing options to use when creating this connection (see above in createConnection)\")])])]),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"boolean\")]),s(\"strong\",[t._v(\"Boolean indicating if we upgrade the connection to TLS on the socks server\")])])]),s(\"h1\",{attrs:{id:\"further-reading\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#further-reading\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Further Reading:\")]),s(\"p\",[t._v(\"Please read the SOCKS 5 specifications for more information on how to use BIND and Associate.\\nhttp://www.ietf.org/rfc/rfc1928.txt\")]),s(\"h1\",{attrs:{id:\"license\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#license\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" License\")]),s(\"p\",[t._v(\"This work is licensed under the \"),s(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/MIT_License\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MIT license\")]),t._v(\".\")])])}],!1,null,null,null);n.default=e.exports}}]);","extractedComments":[]}