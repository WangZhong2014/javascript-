{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{241:function(t,e,a){\"use strict\";a.r(e);var n=a(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"lru-cache\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#lru-cache\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" lru cache\")]),a(\"p\",[t._v(\"A cache object that deletes the least-recently-used items.\")]),a(\"h2\",{attrs:{id:\"usage\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usage\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Usage:\")]),a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"LRU\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"lru-cache\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" options \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"500\")]),t._v(\"\\n              \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" n \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n              \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" dispose\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"key\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"close\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n              \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" maxAge\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1000\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"60\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"60\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" cache \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"LRU\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"options\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" otherCache \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"LRU\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"50\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// sets just the max size\")]),t._v(\"\\n\\ncache\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"set\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"key\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"value\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\ncache\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"get\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\"key\"')]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v('// \"value\"')]),t._v(\"\\n\\ncache\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"reset\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// empty the cache\")]),t._v(\"\\n\")])]),a(\"p\",[t._v(\"If you put more stuff in it, then items will fall out.\")]),a(\"p\",[t._v(\"If you try to put an oversized thing in it, then it'll fall out right\\naway.\")]),a(\"h2\",{attrs:{id:\"options\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#options\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Options\")]),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"max\")]),t._v(\" The maximum size of the cache, checked by applying the length\\nfunction to all values in the cache.  Not setting this is kind of\\nsilly, since that's the whole purpose of this lib, but it defaults\\nto \"),a(\"code\",[t._v(\"Infinity\")]),t._v(\".\")]),a(\"li\",[a(\"code\",[t._v(\"maxAge\")]),t._v(\" Maximum age in ms.  Items are not pro-actively pruned out\\nas they age, but if you try to get an item that is too old, it'll\\ndrop it and return undefined instead of giving it to you.\")]),a(\"li\",[a(\"code\",[t._v(\"length\")]),t._v(\" Function that is used to calculate the length of stored\\nitems.  If you're storing strings or buffers, then you probably want\\nto do something like \"),a(\"code\",[t._v(\"function(n){return n.length}\")]),t._v(\".  The default is\\n\"),a(\"code\",[t._v(\"function(n){return 1}\")]),t._v(\", which is fine if you want to store \"),a(\"code\",[t._v(\"n\")]),t._v(\"\\nlike-sized things.\")]),a(\"li\",[a(\"code\",[t._v(\"dispose\")]),t._v(\" Function that is called on items when they are dropped\\nfrom the cache.  This can be handy if you want to close file\\ndescriptors or do other cleanup tasks when items are no longer\\naccessible.  Called with \"),a(\"code\",[t._v(\"key, value\")]),t._v(\".  It's called \"),a(\"em\",[t._v(\"before\")]),t._v(\"\\nactually removing the item from the internal cache, so if you want\\nto immediately put it back in, you'll have to do that in a\\n\"),a(\"code\",[t._v(\"nextTick\")]),t._v(\" or \"),a(\"code\",[t._v(\"setTimeout\")]),t._v(\" callback or it won't do anything.\")]),a(\"li\",[a(\"code\",[t._v(\"stale\")]),t._v(\" By default, if you set a \"),a(\"code\",[t._v(\"maxAge\")]),t._v(\", it'll only actually pull\\nstale items out of the cache when you \"),a(\"code\",[t._v(\"get(key)\")]),t._v(\".  (That is, it's\\nnot pre-emptively doing a \"),a(\"code\",[t._v(\"setTimeout\")]),t._v(\" or anything.)  If you set\\n\"),a(\"code\",[t._v(\"stale:true\")]),t._v(\", it'll return the stale value before deleting it.  If\\nyou don't set this, then it'll return \"),a(\"code\",[t._v(\"undefined\")]),t._v(\" when you try to\\nget a stale entry, as if it had already been deleted.\")])]),a(\"h2\",{attrs:{id:\"api\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#api\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" API\")]),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"set(key, value, maxAge)\")])])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"get(key) => value\")])]),a(\"p\",[t._v('Both of these will update the \"recently used\"-ness of the key.\\nThey do what you think. '),a(\"code\",[t._v(\"max\")]),t._v(\" is optional and overrides the\\ncache \"),a(\"code\",[t._v(\"max\")]),t._v(\" option if provided.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"peek(key)\")])]),a(\"p\",[t._v(\"Returns the key value (or \"),a(\"code\",[t._v(\"undefined\")]),t._v(' if not found) without\\nupdating the \"recently used\"-ness of the key.')]),a(\"p\",[t._v(\"(If you find yourself using this a lot, you \"),a(\"em\",[t._v(\"might\")]),t._v(\" be using the\\nwrong sort of data structure, but there are some use cases where\\nit's handy.)\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"del(key)\")])]),a(\"p\",[t._v(\"Deletes a key out of the cache.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"reset()\")])]),a(\"p\",[t._v(\"Clear the cache entirely, throwing away all values.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"has(key)\")])]),a(\"p\",[t._v(\"Check if a key is in the cache, without updating the recent-ness\\nor deleting it for being stale.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"forEach(function(value,key,cache), [thisp])\")])]),a(\"p\",[t._v(\"Just like \"),a(\"code\",[t._v(\"Array.prototype.forEach\")]),t._v(\".  Iterates over all the keys\\nin the cache, in order of recent-ness.  (Ie, more recently used\\nitems are iterated over first.)\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"keys()\")])]),a(\"p\",[t._v(\"Return an array of the keys in the cache.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"values()\")])]),a(\"p\",[t._v(\"Return an array of the values in the cache.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"length()\")])]),a(\"p\",[t._v(\"Return total length of objects in cache taking into account\\n\"),a(\"code\",[t._v(\"length\")]),t._v(\" options function.\")])]),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"itemCount()\")])]),a(\"p\",[t._v(\"Return total quantity of objects currently in cache. Note, that\\n\"),a(\"code\",[t._v(\"stale\")]),t._v(\" (see options) items are returned as part of this item\\ncount.\")])])])])}],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}