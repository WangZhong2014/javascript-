{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{391:function(e,a,t){\"use strict\";t.r(a);var n=t(0),i=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t(\"div\",{staticClass:\"content\"},[t(\"h1\",{attrs:{id:\"tweetnacl-js-changelog\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tweetnacl-js-changelog\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" TweetNaCl.js Changelog\")]),t(\"h2\",{attrs:{id:\"v0-14-5\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-5\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.5\")]),t(\"ul\",[t(\"li\",[e._v(\"Fixed incomplete return types in TypeScript typings.\")]),t(\"li\",[e._v('Replaced COPYING.txt with LICENSE file, which now has public domain dedication\\ntext from The Unlicense. License fields in package.json and bower.json have\\nbeen set to \"Unlicense\". The project was and will be in the public domain --\\nthis change just makes it easier for automated tools to know about this fact by\\nusing the widely recognized and SPDX-compatible template for public domain\\ndedication.')])]),t(\"h2\",{attrs:{id:\"v0-14-4\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-4\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.4\")]),t(\"ul\",[t(\"li\",[e._v(\"Added TypeScript type definitions (contributed by @AndSDev).\")]),t(\"li\",[e._v(\"Improved benchmarking code.\")])]),t(\"h2\",{attrs:{id:\"v0-14-3\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-3\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.3\")]),t(\"p\",[e._v(\"Fixed a bug in the fast version of Poly1305 and brought it back.\")]),t(\"p\",[e._v(\"Thanks to @floodyberry for promptly responding and fixing the original C code:\")]),t(\"blockquote\",[t(\"p\",[e._v('\"The issue was not properly detecting if st->h was >= 2^130 - 5, coupled with\\n[testing mistake] not catching the failure. The chance of the bug affecting\\nanything in the real world is essentially zero luckily, but it\\'s good to have\\nit fixed.\"')])]),t(\"p\",[e._v(\"https://github.com/floodyberry/poly1305-donna/issues/2#issuecomment-202698577\")]),t(\"h2\",{attrs:{id:\"v0-14-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-2\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.2\")]),t(\"p\",[e._v(\"Switched Poly1305 fast version back to original (slow) version due to a bug.\")]),t(\"h2\",{attrs:{id:\"v0-14-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.1\")]),t(\"p\",[e._v(\"No code changes, just tweaked packaging and added COPYING.txt.\")]),t(\"h2\",{attrs:{id:\"v0-14-0\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-14-0\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.14.0\")]),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[e._v(\"Breaking change!\")]),e._v(\" All functions from \"),t(\"code\",[e._v(\"nacl.util\")]),e._v(\" have been removed. These\\nfunctions are no longer available:\")]),t(\"pre\",[t(\"code\",[e._v(\"nacl.util.decodeUTF8\\nnacl.util.encodeUTF8\\nnacl.util.decodeBase64\\nnacl.util.encodeBase64\\n\")])]),t(\"p\",[e._v(\"If want to continue using them, you can include\\n\"),t(\"a\",{attrs:{href:\"https://github.com/dchest/tweetnacl-util-js\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://github.com/dchest/tweetnacl-util-js\")]),e._v(\" package:\")]),t(\"pre\",[t(\"code\",[e._v('<script src=\"nacl.min.js\"><\\/script>\\n<script src=\"nacl-util.min.js\"><\\/script>\\n')])]),t(\"p\",[e._v(\"or\")]),t(\"pre\",[t(\"code\",[e._v(\"var nacl = require('tweetnacl');\\nnacl.util = require('tweetnacl-util');\\n\")])]),t(\"p\",[e._v(\"However it is recommended to use better packages that have wider\\ncompatibility and better performance. Functions from \"),t(\"code\",[e._v(\"nacl.util\")]),e._v(\" were never\\nintended to be robust solution for string conversion and were included for\\nconvenience: cryptography library is not the right place for them.\")]),t(\"p\",[e._v(\"Currently calling these functions will throw error pointing to\\n\"),t(\"code\",[e._v(\"tweetnacl-util-js\")]),e._v(\" (in the next version this error message will be removed).\")])]),t(\"li\",[t(\"p\",[e._v(\"Improved detection of available random number generators, making it possible\\nto use \"),t(\"code\",[e._v(\"nacl.randomBytes\")]),e._v(\" and related functions in Web Workers without\\nchanges.\")])]),t(\"li\",[t(\"p\",[e._v(\"Changes to testing (see README).\")])])]),t(\"h2\",{attrs:{id:\"v0-13-3\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-13-3\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.13.3\")]),t(\"p\",[e._v(\"No code changes.\")]),t(\"ul\",[t(\"li\",[t(\"p\",[e._v('Reverted license field in package.json to \"Public domain\".')])]),t(\"li\",[t(\"p\",[e._v(\"Fixed typo in README.\")])])]),t(\"h2\",{attrs:{id:\"v0-13-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-13-2\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.13.2\")]),t(\"ul\",[t(\"li\",[t(\"p\",[e._v(\"Fixed undefined variable bug in fast version of Poly1305. No worries, this\\nbug was \"),t(\"em\",[e._v(\"never\")]),e._v(\" triggered.\")])]),t(\"li\",[t(\"p\",[e._v(\"Specified CC0 public domain dedication.\")])]),t(\"li\",[t(\"p\",[e._v(\"Updated development dependencies.\")])])]),t(\"h2\",{attrs:{id:\"v0-13-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-13-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.13.1\")]),t(\"ul\",[t(\"li\",[e._v(\"Exclude \"),t(\"code\",[e._v(\"crypto\")]),e._v(\" and \"),t(\"code\",[e._v(\"buffer\")]),e._v(\" modules from browserify builds.\")])]),t(\"h2\",{attrs:{id:\"v0-13-0\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-13-0\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.13.0\")]),t(\"ul\",[t(\"li\",[t(\"p\",[e._v(\"Made \"),t(\"code\",[e._v(\"nacl-fast\")]),e._v(\" the default version in NPM package. Now\\n\"),t(\"code\",[e._v('require(\"tweetnacl\")')]),e._v(\" will use fast version; to get the original version,\\nuse \"),t(\"code\",[e._v('require(\"tweetnacl/nacl.js\")')]),e._v(\".\")])]),t(\"li\",[t(\"p\",[e._v(\"Cleanup temporary array after generating random bytes.\")])])]),t(\"h2\",{attrs:{id:\"v0-12-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-12-2\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.12.2\")]),t(\"ul\",[t(\"li\",[e._v(\"Improved performance of curve operations, making \"),t(\"code\",[e._v(\"nacl.scalarMult\")]),e._v(\", \"),t(\"code\",[e._v(\"nacl.box\")]),e._v(\",\\n\"),t(\"code\",[e._v(\"nacl.sign\")]),e._v(\" and related functions up to 3x faster in \"),t(\"code\",[e._v(\"nacl-fast\")]),e._v(\" version.\")])]),t(\"h2\",{attrs:{id:\"v0-12-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-12-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.12.1\")]),t(\"ul\",[t(\"li\",[e._v(\"Significantly improved performance of Salsa20 (~1.5x faster) and\\nPoly1305 (~3.5x faster) in \"),t(\"code\",[e._v(\"nacl-fast\")]),e._v(\" version.\")])]),t(\"h2\",{attrs:{id:\"v0-12-0\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-12-0\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.12.0\")]),t(\"ul\",[t(\"li\",[e._v(\"Instead of using the given secret key directly, TweetNaCl.js now copies it to\\na new array in \"),t(\"code\",[e._v(\"nacl.box.keyPair.fromSecretKey\")]),e._v(\" and\\n\"),t(\"code\",[e._v(\"nacl.sign.keyPair.fromSecretKey\")]),e._v(\".\")])]),t(\"h2\",{attrs:{id:\"v0-11-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-11-2\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.11.2\")]),t(\"ul\",[t(\"li\",[e._v(\"Added new constant: \"),t(\"code\",[e._v(\"nacl.sign.seedLength\")]),e._v(\".\")])]),t(\"h2\",{attrs:{id:\"v0-11-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-11-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.11.1\")]),t(\"ul\",[t(\"li\",[e._v(\"Even faster hash for both short and long inputs (in \"),t(\"code\",[e._v(\"nacl-fast\")]),e._v(\").\")])]),t(\"h2\",{attrs:{id:\"v0-11-0\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-11-0\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.11.0\")]),t(\"ul\",[t(\"li\",[t(\"p\",[e._v(\"Implement \"),t(\"code\",[e._v(\"nacl.sign.keyPair.fromSeed\")]),e._v(\" to enable creation of sign key pairs\\ndeterministically from a 32-byte seed. (It behaves like\\n\"),t(\"a\",{attrs:{href:\"http://doc.libsodium.org/public-key_cryptography/public-key_signatures.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"libsodium's\")]),t(\"code\",[e._v(\"crypto_sign_seed_keypair\")]),e._v(\": the seed becomes a secret part of the secret key.)\")])]),t(\"li\",[t(\"p\",[e._v(\"Fast version now has an improved hash implementation that is 2x-5x faster.\")])]),t(\"li\",[t(\"p\",[e._v(\"Fixed benchmarks, which may have produced incorrect measurements.\")])])]),t(\"h2\",{attrs:{id:\"v0-10-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-10-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.10.1\")]),t(\"ul\",[t(\"li\",[e._v(\"Exported undocumented \"),t(\"code\",[e._v(\"nacl.lowlevel.crypto_core_hsalsa20\")]),e._v(\".\")])]),t(\"h2\",{attrs:{id:\"v0-10-0\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-10-0\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.10.0\")]),t(\"ul\",[t(\"li\",[t(\"strong\",[e._v(\"Signature API breaking change!\")]),t(\"code\",[e._v(\"nacl.sign\")]),e._v(\" and \"),t(\"code\",[e._v(\"nacl.sign.open\")]),e._v(\" now deal\\nwith signed messages, and new \"),t(\"code\",[e._v(\"nacl.sign.detached\")]),e._v(\" and\\n\"),t(\"code\",[e._v(\"nacl.sign.detached.verify\")]),e._v(\" are available.\")])]),t(\"p\",[e._v(\"Previously, \"),t(\"code\",[e._v(\"nacl.sign\")]),e._v(\" returned a signature, and \"),t(\"code\",[e._v(\"nacl.sign.open\")]),e._v(' accepted a\\nmessage and \"detached\" signature. This was unlike NaCl\\'s API, which dealt with\\nsigned messages (concatenation of signature and message).')]),t(\"p\",[e._v(\"The new API is:\")]),t(\"pre\",[t(\"code\",[e._v(\"  nacl.sign(message, secretKey) -> signedMessage\\n  nacl.sign.open(signedMessage, publicKey) -> message | null\\n\")])]),t(\"p\",[e._v(\"Since detached signatures are common, two new API functions were introduced:\")]),t(\"pre\",[t(\"code\",[e._v(\"  nacl.sign.detached(message, secretKey) -> signature\\n  nacl.sign.detached.verify(message, signature, publicKey) -> true | false\\n\")])]),t(\"p\",[e._v(\"(Note that it's \"),t(\"code\",[e._v(\"verify\")]),e._v(\", not \"),t(\"code\",[e._v(\"open\")]),e._v(\", and it returns a boolean value, unlike\\n\"),t(\"code\",[e._v(\"open\")]),e._v(', which returns an \"unsigned\" message.)')]),t(\"ul\",[t(\"li\",[e._v(\"NPM package now comes without \"),t(\"code\",[e._v(\"test\")]),e._v(\" directory to keep it small.\")])]),t(\"h2\",{attrs:{id:\"v0-9-2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-9-2\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.9.2\")]),t(\"ul\",[t(\"li\",[e._v(\"Improved documentation.\")]),t(\"li\",[e._v(\"Fast version: increased theoretical message size limit from 2^32-1 to 2^52\\nbytes in Poly1305 (and thus, secretbox and box). However this has no impact\\nin practice since JavaScript arrays or ArrayBuffers are limited to 32-bit\\nindexes, and most implementations won't allocate more than a gigabyte or so.\\n(Obviously, there are no tests for the correctness of implementation.) Also,\\nit's not recommended to use messages that large without splitting them into\\nsmaller packets anyway.\")])]),t(\"h2\",{attrs:{id:\"v0-9-1\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v0-9-1\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" v0.9.1\")]),t(\"ul\",[t(\"li\",[e._v(\"Initial release\")])])])}],!1,null,null,null);a.default=i.exports}}]);","extractedComments":[]}